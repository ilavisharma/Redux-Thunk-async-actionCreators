{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","sent","type","payload","data","stop","this","_x3","apply","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","console","log","_","chain","uniq","forEach","value","_x","_x2","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.2816da6c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com'\n});\n","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\n\r\nexport const fetchPostsAndUsers = () => async(dispatch, getState) => {\r\n    console.log('about to fetch posts');\r\n    await dispatch(fetchPosts()); // we wait for this api request to complete\r\n\r\n    // const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n    // userIds.forEach(id => dispatch(fetchUser(id)));\r\n\r\n    _.chain(getState().posts)\r\n        .map('userId')\r\n        .uniq()\r\n        .forEach(id => dispatch(fetchUser(id)))\r\n        .value();\r\n};\r\n\r\nexport const fetchPosts = () => async(dispatch) => {\r\n    const response = await jsonPlaceholder.get('/posts');\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data });\r\n};\r\n\r\nexport const fetchUser = (id) => async(dispatch) => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n    dispatch({ type: 'FETCH_USER', payload: response.data });\r\n};\r\n\r\n// --- MEMOIZED VERSION ---\r\n// export const fetchUser = (id) => (dispatch) => _fetchUser(id, dispatch);\r\n// const _fetchUser = _.memoize(async(id, dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\r\n//     dispatch({ type: 'FETCH_USER', payload: response.data });\r\n// });\r\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass UserHeader extends React.Component {\n\n    render() {\n        const { user } = this.props;\n        if (!user) {\n            return null;\n        }\n        return (<div className=\"header\">\n                {user.name}\n            </div>);\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { user: state.users.find(user => user.id === ownProps.userId) };\n};\n\nexport default connect(mapStateToProps)(UserHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '../actions';\nimport UserHeader from './UserHeader';\n\nclass PostList extends React.Component {\n    componentDidMount() {\n        this.props.fetchPostsAndUsers();\n    }\n\n    renderList() {\n        return this.props.posts.map(post => {\n            return (<div className=\"item\" key={post.id}>\n                    <i className=\"large middle aligned icon user\" />\n                    <div className=\"content\">\n                        <div className=\"description\">\n                            <h2>{post.title}</h2>\n                            <p>{post.body}</p>\n                        </div>\n                        <UserHeader userId={post.userId} />\n                    </div>\n                </div>);\n        });\n    }\n\n    render() {\n        return (<div className=\"ui relaxed divided list\">\n                {this.renderList()}\n            </div>);\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.posts\n    };\n};\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers: fetchPostsAndUsers })(PostList);\n","import React from 'react';\nimport PostList from './PostList';\n\nconst App = props => {\n    return (\n        <div className=\"ui container\">\n            <PostList />\n        </div>\n    );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\nimport usersReducer from './usersReducer';\n\nexport default combineReducers({\n    posts: postsReducer,\n    users: usersReducer\n});\n","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_POSTS':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_USER':\n            return [...state, action.payload];\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}